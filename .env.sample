# General configuration --------------------------------------------------------

# Writeable directory where all the files will be stored (default: ./data)
# NANIT_DATA_DIR=/app/data

# Default value: info
# Allowed values: trace | debug | info | warn | error | fatal | panic
# NANIT_LOG_LEVEL=debug

# Session file (optional)
# Stores state between runs.
#
# Warning: The file contains sensitive information (auth tokens, etc.).
# NANIT_SESSION_FILE=data/session.json

# RTMP server ------------------------------------------------------------------

# Enable integrated RTMP server (default: true)
# NANIT_RTMP_ENABLED=true

# Address under which is this app reachable from the cam
# Note: You cannot use your 127.0.0.1 here, it has to be reachable from the cam.
#  Also pay attention to the port if you are port forwarding it in Docker.
# NANIT_RTMP_ADDR=192.168.3.234:1935

# MQTT -------------------------------------------------------------------------

# Enable MQTT integration for reading sensors data (default: false)
# NANIT_MQTT_ENABLED=true

# MQTT broker host (required if enabled)
# Examples:
# - Plain TCP: tcp://iot.eclipse.org:1883
# - Websocket: ws://my.mqtt.local or wss://my.secure.mqtt.local
# NANIT_MQTT_BROKER_URL=

# Credentials for MQTT broker (optional)
# NANIT_MQTT_USERNAME=
# NANIT_MQTT_PASSWORD=

# Client ID (default: nanit)
# NANIT_MQTT_CLIENT_ID=mynanit

# Topic prefix (default: nanit)
# NANIT_MQTT_PREFIX=mynanit

# Event Polling ----------------------------------------------------------------

# While Nanit doesn't provide a stream of events to subscribe to, you can poll
# the /babies/{baby_uid}/messages endpoint to retrieve the latest event messages

# Enable events polling
# NANIT_EVENTS_POLLING=true

# Interval in seconds at which to poll for new event messages (default: 30)
# NANIT_EVENTS_POLLING_INTERVAL=20

# Time in seconds after which to disregard event messages (default: 300)
# NANIT_EVENTS_MESSAGE_TIMEOUT=300
